namespace uavcan.samples
{
    type S00_t_uint4
    {
        truncated uint4 val
    }
    type S01_s_uint4
    {
        saturated uint4 val
    }
    type S02_uint64
    {
        uint64 val
    }
    type S03_int64
    {
        int64 val
    }
    type S04_bool
    {
        bool val
    }
    type S05_float16
    {
        float16 val
    }
    type S06_float64
    {
        float64 val
    }
    type S07_as4_uint8
    {
        uint8[4] val
    }
    type S08_ad4_uint8
    {
        uint8[<=4] val
    }
    type S09_as4_uint8_ad4_uint8
    {
        uint8[4] val0
        uint8[<=4] val1
    }
    type S10_ad4_uint8_as4_uint8
    {
        uint8[<=4] val0
        uint8[4] val1
    }
    type S11_s_int24
    {
        saturated int24 val
    }
    type S12_s_uint24
    {
        saturated uint24 val
    }
    type S14_s_uint24
    {
        truncated uint24 val
    }
    type CmpTestA
    {
        int8 field
    }
    type CmpTestA_A
    {
        int8 field
        CmpTestA a
    }
    type TAO1
    {
        uint8 foo
        uint8[<9] array
    }
    type TAO2
    {
        float16 foo
        uint7[<=8] array
    }
    type TAO3
    {
        uint8[<=8] array
        float16 bar
    }
    type TAO4
    {
        bool[<=42] array
    }
    type TAO5
    {
        TAO4[<=42] array
    }
    type TAO6
    {
        TAO1[<=2] array
    }
    type TAO7
    {
        TAO1[<=2] array
        float16 baz
    }
    type TAO8
    {
        int4 fooz
        float64[<=64] array
    }
    type TAO9
    {
        TAO8[<=12] array
    }
    type Union1
    {
        @union                  # In this case, the union tag requires 2 bits
        uint16 FOO = 42         # A regular constant attribute
        uint16 a                # Index 0
        uint8 b                 # Index 1
        float64 c               # Index 2
        uint32 BAR = 42         # Another regular constant
    }
    type Void1
    {
        void1
        int8 i
        void10
    }
}
