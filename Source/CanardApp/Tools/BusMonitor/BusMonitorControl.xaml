<UserControl x:Class="CanardApp.Tools.BusMonitor.BusMonitorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CanardApp.Tools.BusMonitor"
             xmlns:conv="clr-namespace:CanardApp.Presentation.Converters"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:tconv="clr-namespace:CanardApp.Tools.BusMonitor.Presentation.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock>Ready</TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="200" />
                    </Grid.ColumnDefinitions>
                    <WrapPanel DockPanel.Dock="Top">
                        <WrapPanel.Resources>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroToggleButton}">
                                <Setter Property="Margin" Value="3,3" />
                                <Setter Property="Padding" Value="2,2" />
                                <Setter Property="Width" Value="25" />
                                <Setter Property="Height" Value="25" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush5}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                                <Setter Property="Margin" Value="3,3" />
                                <Setter Property="Padding" Value="2,2" />
                                <Setter Property="Width" Value="25" />
                                <Setter Property="Height" Value="25" />
                            </Style>
                        </WrapPanel.Resources>

                        <ToggleButton IsChecked="True" Click="EnabledButton_Click" ToolTip="Enable or disable">&#x1F3A5;</ToggleButton>
                        <Button ToolTip="Pause">&#10074;&#10074;</Button>
                        <Button Click="ClearButton_Click" ToolTip="Clear">&#x1F5D1;</Button>
                        <Button ToolTip="Search">&#x1F50D;</Button>
                        <Button ToolTip="Add filter" Click="AddFilterButton_Click">&#x25BC;</Button>
                    </WrapPanel>

                    <TextBlock Grid.Column="1" HorizontalAlignment="Left" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Center"/>
                </Grid>
                <StackPanel Name="spFilters">

                </StackPanel>
            </StackPanel>

            <DataGrid Name="dgFrames" AutoGenerateColumns="False" Grid.Row="1" EnableRowVirtualization="True"
                      IsReadOnly="True">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource MetroDataGridRow}">
                        <Setter Property="FontFamily" Value="Consolas,Courier New" />
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Resources>
                    <conv:ByteArrayToHexConverter x:Key="ByteArrayToHexConverter" />
                    <conv:ByteArrayToTextConverter x:Key="ByteArrayToTextConverter" />
                    <conv:IsNullConverter x:Key="IsNullConverter" />
                    <tconv:CanIdToBrushConverter x:Key="CanIdToBrushConverter" />
                    <tconv:NodeIdToBrushConverter x:Key="NodeIdToBrushConverter" />
                    <tconv:TransferIdToBrushConverter x:Key="TransferIdToBrushConverter" />
                    <tconv:DataTypeToBrushConverter x:Key="DataTypeToBrushConverter" />
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MetroTextBlock}" x:Key="RightCell">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="TextAlignment" Value="Right"/>
                        <Setter Property="Padding" Value="0,0,3,0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}" x:Key="DataCell">
                        <Setter Property="Background" Value="{Binding Path=., Converter={StaticResource TransferIdToBrushConverter}}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}" x:Key="SrcNodeIdCell">
                        <Setter Property="Background" Value="{Binding SourceNodeId, Converter={StaticResource NodeIdToBrushConverter}}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}" x:Key="DstNodeIdCell">
                        <Setter Property="Background" Value="{Binding DestinationNodeId, Converter={StaticResource NodeIdToBrushConverter}}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}" x:Key="CanIdCell">
                        <Setter Property="Background" Value="{Binding CanId, Converter={StaticResource CanIdToBrushConverter}}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}" x:Key="DataTypeCell">
                        <Setter Property="Background" Value="{Binding DataType, Converter={StaticResource DataTypeToBrushConverter}}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Dir" Binding="{Binding Direction}" />
                    <DataGridTemplateColumn Header="Time">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Time, StringFormat=\{0:HH:mm:ss.ffff\}}">
                                    <TextBlock.ToolTip>
                                        <ToolTip>
                                            <TextBlock Text="{Binding Path=Time, StringFormat=\{0:dd.MM.yy HH:mm:ss.ffff\}}" />
                                        </ToolTip>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="CAN ID" Binding="{Binding CanId}" ElementStyle="{StaticResource RightCell}" 
                                        CellStyle="{StaticResource CanIdCell}"/>
                    <DataGridTextColumn Header="Hex" Binding="{Binding Data, Converter={StaticResource ByteArrayToHexConverter}}"
                                        CellStyle="{StaticResource DataCell}"/>
                    <DataGridTextColumn Header="Text" Binding="{Binding Data, Converter={StaticResource ByteArrayToTextConverter}}"
                                        CellStyle="{StaticResource DataCell}"/>
                    <DataGridTextColumn Header="Src" Binding="{Binding SourceNodeId}" ElementStyle="{StaticResource RightCell}"
                                        CellStyle="{StaticResource SrcNodeIdCell}"/>
                    <DataGridTextColumn Header="Dst" Binding="{Binding DestinationNodeId}" ElementStyle="{StaticResource RightCell}"
                                        CellStyle="{StaticResource DstNodeIdCell}"/>
                    <DataGridTextColumn Header="Data Type" Binding="{Binding DataType}" Width="*"
                                        CellStyle="{StaticResource DataTypeCell}"/>
                </DataGrid.Columns>
            </DataGrid>

            <GridSplitter HorizontalAlignment="Stretch" 
                  VerticalAlignment="Top" 
                  Grid.Row="2" ResizeBehavior="PreviousAndNext"
                  Height="2" Background="#FFBCBCBC"/>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>
                <RichTextBox HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="RichTextBox"/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
                <GridSplitter HorizontalAlignment="Right" 
                    VerticalAlignment="Stretch" 
                    Grid.Column="1" ResizeBehavior="PreviousAndNext"
                    Width="2" Background="#FFBCBCBC"/>
                <Label Content="Right" Grid.Column="2" />
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
